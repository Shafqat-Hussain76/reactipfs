{"ast":null,"code":"var _jsxFileName = \"E:\\\\PIAIC\\\\Quater04\\\\MyAPPs\\\\reactipfs\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { create } from \"ipfs-http-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = create('https://ipfs.infura.io:5001/api/v0');\n\nfunction App() {\n  _s();\n\n  const [ipfsfile, setIpfsFile] = useState(\"\");\n\n  const hand = async event => {\n    event.preventDefault();\n    const file = event.target.files[0];\n\n    if (typeof file !== 'undefined') {\n      try {\n        const result = await client.add(file);\n        console.log(result);\n        setIpfsFile(`https://ipfs.infura.io/ipfs/${result.path}`);\n      } catch (error) {\n        console.log(\"ipfs image upload error: \", error);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Load file using React/IPFS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"File Path is \", ipfsfile]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: () => hand()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"heTAYh9sJyk2XjLPoZLIVLHSdh0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","create","client","App","ipfsfile","setIpfsFile","hand","event","preventDefault","file","target","files","result","add","console","log","path","error"],"sources":["E:/PIAIC/Quater04/MyAPPs/reactipfs/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { create } from \"ipfs-http-client\";\nconst client = create('https://ipfs.infura.io:5001/api/v0');\n\nfunction App() {\n  const [ipfsfile, setIpfsFile] = useState(\"\");\n\n  const hand = async (event)=>{\n    event.preventDefault()\n    const file = event.target.files[0]\n    if (typeof file !== 'undefined') {\n      try {\n        const result = await client.add(file)\n        console.log(result)\n        setIpfsFile(`https://ipfs.infura.io/ipfs/${result.path}`)\n      } catch (error){\n        console.log(\"ipfs image upload error: \", error)\n      }\n    }\n  }\n   \n  \n  return (\n    <div className=\"App\">\n      <h1>Load file using React/IPFS</h1>\n      <h2>File Path is { ipfsfile }</h2>\n      <input type= \"file\" onChange={()=>hand()} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,kBAAvB;;AACA,MAAMC,MAAM,GAAGD,MAAM,CAAC,oCAAD,CAArB;;AAEA,SAASE,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;;EAEA,MAAMM,IAAI,GAAG,MAAOC,KAAP,IAAe;IAC1BA,KAAK,CAACC,cAAN;IACA,MAAMC,IAAI,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;;IACA,IAAI,OAAOF,IAAP,KAAgB,WAApB,EAAiC;MAC/B,IAAI;QACF,MAAMG,MAAM,GAAG,MAAMV,MAAM,CAACW,GAAP,CAAWJ,IAAX,CAArB;QACAK,OAAO,CAACC,GAAR,CAAYH,MAAZ;QACAP,WAAW,CAAE,+BAA8BO,MAAM,CAACI,IAAK,EAA5C,CAAX;MACD,CAJD,CAIE,OAAOC,KAAP,EAAa;QACbH,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCE,KAAzC;MACD;IACF;EACF,CAZD;;EAeA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,4BAAmBb,QAAnB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAO,IAAI,EAAE,MAAb;MAAoB,QAAQ,EAAE,MAAIE,IAAI;IAAtC;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GAzBQH,G;;KAAAA,G;AA2BT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}