{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createData = configure(api => {\n  /**\n   * @type {ObjectAPI[\"data\"]}\n   */\n  async function data(cid) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const res = await api.post('object/data', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid instanceof Uint8Array ? CID.decode(cid) : cid}`,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.arrayBuffer();\n    return new Uint8Array(data, 0, data.byteLength);\n  }\n\n  return data;\n});","map":{"version":3,"names":["CID","configure","toUrlSearchParams","createData","api","data","cid","options","res","post","signal","searchParams","arg","Uint8Array","decode","headers","arrayBuffer","byteLength"],"sources":["E:/PIAIC/Quater04/MyAPPs/reactipfs/node_modules/ipfs-http-client/src/object/data.js"],"sourcesContent":["import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createData = configure(api => {\n  /**\n   * @type {ObjectAPI[\"data\"]}\n   */\n  async function data (cid, options = {}) {\n    const res = await api.post('object/data', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid instanceof Uint8Array ? CID.decode(cid) : cid}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.arrayBuffer()\n\n    return new Uint8Array(data, 0, data.byteLength)\n  }\n  return data\n})\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,kBAApB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,UAAU,GAAGF,SAAS,CAACG,GAAG,IAAI;EACzC;AACF;AACA;EACE,eAAeC,IAAf,CAAqBC,GAArB,EAAwC;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IACtC,MAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,aAAT,EAAwB;MACxCC,MAAM,EAAEH,OAAO,CAACG,MADwB;MAExCC,YAAY,EAAET,iBAAiB,CAAC;QAC9BU,GAAG,EAAG,GAAEN,GAAG,YAAYO,UAAf,GAA4Bb,GAAG,CAACc,MAAJ,CAAWR,GAAX,CAA5B,GAA8CA,GAAI,EAD5B;QAE9B,GAAGC;MAF2B,CAAD,CAFS;MAMxCQ,OAAO,EAAER,OAAO,CAACQ;IANuB,CAAxB,CAAlB;IAQA,MAAMV,IAAI,GAAG,MAAMG,GAAG,CAACQ,WAAJ,EAAnB;IAEA,OAAO,IAAIH,UAAJ,CAAeR,IAAf,EAAqB,CAArB,EAAwBA,IAAI,CAACY,UAA7B,CAAP;EACD;;EACD,OAAOZ,IAAP;AACD,CAlBkC,CAA5B"},"metadata":{},"sourceType":"module"}