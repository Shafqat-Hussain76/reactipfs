{"ast":null,"code":"var _jsxFileName = \"E:\\\\PIAIC\\\\Quater04\\\\MyAPPs\\\\reactipfs\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { create } from \"ipfs-http-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = create('https://ipfs.infura.io:5001/api/v0');\n\nfunction App() {\n  _s();\n\n  const [ipfsfile, setIpfsFile] = useState(\"\");\n\n  const hand = async e => {\n    //e.preventDefault();\n    try {\n      const file = e.target.files[0];\n      const upload = await client.add(file);\n      const filePatch = `https://ipfs.infura.io/ipfs/${upload.path}`;\n      setIpfsFile(() => filePatch);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Load file using React/IPFS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"File Path is \", ipfsfile]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: () => hand()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"heTAYh9sJyk2XjLPoZLIVLHSdh0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","create","client","App","ipfsfile","setIpfsFile","hand","e","file","target","files","upload","add","filePatch","path","err","console","log"],"sources":["E:/PIAIC/Quater04/MyAPPs/reactipfs/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { create } from \"ipfs-http-client\";\nconst client = create('https://ipfs.infura.io:5001/api/v0');\n\nfunction App() {\n  const [ipfsfile, setIpfsFile] = useState(\"\");\n\n  const hand = async (e)=>{\n    //e.preventDefault();\n    try {\n      const file = e.target.files[0];\n      const upload = await client.add(file);\n      const filePatch = `https://ipfs.infura.io/ipfs/${upload.path}`;\n      setIpfsFile(()=>filePatch);\n\n    }catch(err){\n      console.log(err);\n    }\n  }\n  return (\n    <div className=\"App\">\n      <h1>Load file using React/IPFS</h1>\n      <h2>File Path is { ipfsfile }</h2>\n      <input type= \"file\" onChange={()=>hand()} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,kBAAvB;;AACA,MAAMC,MAAM,GAAGD,MAAM,CAAC,oCAAD,CAArB;;AAEA,SAASE,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;;EAEA,MAAMM,IAAI,GAAG,MAAOC,CAAP,IAAW;IACtB;IACA,IAAI;MACF,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;MACA,MAAMC,MAAM,GAAG,MAAMT,MAAM,CAACU,GAAP,CAAWJ,IAAX,CAArB;MACA,MAAMK,SAAS,GAAI,+BAA8BF,MAAM,CAACG,IAAK,EAA7D;MACAT,WAAW,CAAC,MAAIQ,SAAL,CAAX;IAED,CAND,CAMC,OAAME,GAAN,EAAU;MACTC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACD;EACF,CAXD;;EAYA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,4BAAmBX,QAAnB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAO,IAAI,EAAE,MAAb;MAAoB,QAAQ,EAAE,MAAIE,IAAI;IAAtC;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GAtBQH,G;;KAAAA,G;AAwBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}