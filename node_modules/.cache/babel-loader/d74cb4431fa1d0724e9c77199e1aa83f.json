{"ast":null,"code":"import { configure } from '../lib/configure.js';\nimport errCode from 'err-code';\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createInfo = configure(api => {\n  /**\n   * @type {KeyAPI[\"info\"]}\n   */\n  const info = async function (name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED');\n  };\n\n  return info;\n});","map":{"version":3,"names":["configure","errCode","createInfo","api","info","name","options","Error"],"sources":["E:/PIAIC/Quater04/MyAPPs/reactipfs/node_modules/ipfs-http-client/src/key/info.js"],"sourcesContent":["import { configure } from '../lib/configure.js'\nimport errCode from 'err-code'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createInfo = configure(api => {\n  /**\n   * @type {KeyAPI[\"info\"]}\n   */\n  const info = async (name, options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED')\n  }\n\n  return info\n})\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,qBAA1B;AACA,OAAOC,OAAP,MAAoB,UAApB;AAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,UAAU,GAAGF,SAAS,CAACG,GAAG,IAAI;EACzC;AACF;AACA;EACE,MAAMC,IAAI,GAAG,gBAAOC,IAAP,EAA8B;IAAA,IAAjBC,OAAiB,uEAAP,EAAO;IACzC,MAAML,OAAO,CAAC,IAAIM,KAAJ,CAAU,iBAAV,CAAD,EAA+B,qBAA/B,CAAb;EACD,CAFD;;EAIA,OAAOH,IAAP;AACD,CATkC,CAA5B"},"metadata":{},"sourceType":"module"}