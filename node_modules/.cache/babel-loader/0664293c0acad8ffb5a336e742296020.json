{"ast":null,"code":"import { objectToCamel } from '../lib/object-to-camel.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name').API<HTTPClientExtraOptions>} NameAPI\n */\n\nexport const createPublish = configure(api => {\n  /**\n   * @type {NameAPI[\"publish\"]}\n   */\n  async function publish(path) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const res = await api.post('name/publish', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${path}`,\n        ...options\n      }),\n      headers: options.headers\n    }); // @ts-expect-error server output is not typed\n\n    return objectToCamel(await res.json());\n  }\n\n  return publish;\n});","map":{"version":3,"names":["objectToCamel","configure","toUrlSearchParams","createPublish","api","publish","path","options","res","post","signal","searchParams","arg","headers","json"],"sources":["E:/PIAIC/Quater04/MyAPPs/reactipfs/node_modules/ipfs-http-client/src/name/publish.js"],"sourcesContent":["import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name').API<HTTPClientExtraOptions>} NameAPI\n */\n\nexport const createPublish = configure(api => {\n  /**\n   * @type {NameAPI[\"publish\"]}\n   */\n  async function publish (path, options = {}) {\n    const res = await api.post('name/publish', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${path}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(await res.json())\n  }\n  return publish\n})\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,2BAA9B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,aAAa,GAAGF,SAAS,CAACG,GAAG,IAAI;EAC5C;AACF;AACA;EACE,eAAeC,OAAf,CAAwBC,IAAxB,EAA4C;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IAC1C,MAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,cAAT,EAAyB;MACzCC,MAAM,EAAEH,OAAO,CAACG,MADyB;MAEzCC,YAAY,EAAET,iBAAiB,CAAC;QAC9BU,GAAG,EAAG,GAAEN,IAAK,EADiB;QAE9B,GAAGC;MAF2B,CAAD,CAFU;MAMzCM,OAAO,EAAEN,OAAO,CAACM;IANwB,CAAzB,CAAlB,CAD0C,CAU1C;;IACA,OAAOb,aAAa,CAAC,MAAMQ,GAAG,CAACM,IAAJ,EAAP,CAApB;EACD;;EACD,OAAOT,OAAP;AACD,CAlBqC,CAA/B"},"metadata":{},"sourceType":"module"}