{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { peerIdFromString } from '@libp2p/peer-id';\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\nexport const createStat = configure(api => {\n  /**\n   * @type {BitswapAPI[\"stat\"]}\n   */\n  async function stat() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const res = await api.post('bitswap/stat', {\n      searchParams: toUrlSearchParams(options),\n      signal: options.signal,\n      headers: options.headers\n    });\n    return toCoreInterface(await res.json());\n  }\n\n  return stat;\n});\n/**\n * @param {any} res\n */\n\nfunction toCoreInterface(res) {\n  return {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: (res.Wantlist || []).map((\n    /** @type {{ '/': string }} */\n    k) => CID.parse(k['/'])),\n    peers: (res.Peers || []).map((\n    /** @type {string} */\n    str) => peerIdFromString(str)),\n    blocksReceived: BigInt(res.BlocksReceived),\n    dataReceived: BigInt(res.DataReceived),\n    blocksSent: BigInt(res.BlocksSent),\n    dataSent: BigInt(res.DataSent),\n    dupBlksReceived: BigInt(res.DupBlksReceived),\n    dupDataReceived: BigInt(res.DupDataReceived)\n  };\n}","map":{"version":3,"names":["CID","configure","toUrlSearchParams","peerIdFromString","createStat","api","stat","options","res","post","searchParams","signal","headers","toCoreInterface","json","provideBufLen","ProvideBufLen","wantlist","Wantlist","map","k","parse","peers","Peers","str","blocksReceived","BigInt","BlocksReceived","dataReceived","DataReceived","blocksSent","BlocksSent","dataSent","DataSent","dupBlksReceived","DupBlksReceived","dupDataReceived","DupDataReceived"],"sources":["E:/PIAIC/Quater04/MyAPPs/reactipfs/node_modules/ipfs-http-client/src/bitswap/stat.js"],"sourcesContent":["import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\nexport const createStat = configure(api => {\n  /**\n   * @type {BitswapAPI[\"stat\"]}\n   */\n  async function stat (options = {}) {\n    const res = await api.post('bitswap/stat', {\n      searchParams: toUrlSearchParams(options),\n      signal: options.signal,\n      headers: options.headers\n    })\n\n    return toCoreInterface(await res.json())\n  }\n  return stat\n})\n\n/**\n * @param {any} res\n */\nfunction toCoreInterface (res) {\n  return {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: (res.Wantlist || []).map((/** @type {{ '/': string }} */ k) => CID.parse(k['/'])),\n    peers: (res.Peers || []).map((/** @type {string} */ str) => peerIdFromString(str)),\n    blocksReceived: BigInt(res.BlocksReceived),\n    dataReceived: BigInt(res.DataReceived),\n    blocksSent: BigInt(res.BlocksSent),\n    dataSent: BigInt(res.DataSent),\n    dupBlksReceived: BigInt(res.DupBlksReceived),\n    dupDataReceived: BigInt(res.DupDataReceived)\n  }\n}\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,kBAApB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,UAAU,GAAGH,SAAS,CAACI,GAAG,IAAI;EACzC;AACF;AACA;EACE,eAAeC,IAAf,GAAmC;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IACjC,MAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,cAAT,EAAyB;MACzCC,YAAY,EAAER,iBAAiB,CAACK,OAAD,CADU;MAEzCI,MAAM,EAAEJ,OAAO,CAACI,MAFyB;MAGzCC,OAAO,EAAEL,OAAO,CAACK;IAHwB,CAAzB,CAAlB;IAMA,OAAOC,eAAe,CAAC,MAAML,GAAG,CAACM,IAAJ,EAAP,CAAtB;EACD;;EACD,OAAOR,IAAP;AACD,CAdkC,CAA5B;AAgBP;AACA;AACA;;AACA,SAASO,eAAT,CAA0BL,GAA1B,EAA+B;EAC7B,OAAO;IACLO,aAAa,EAAEP,GAAG,CAACQ,aADd;IAELC,QAAQ,EAAE,CAACT,GAAG,CAACU,QAAJ,IAAgB,EAAjB,EAAqBC,GAArB,CAAyB;IAAC;IAA+BC,CAAhC,KAAsCpB,GAAG,CAACqB,KAAJ,CAAUD,CAAC,CAAC,GAAD,CAAX,CAA/D,CAFL;IAGLE,KAAK,EAAE,CAACd,GAAG,CAACe,KAAJ,IAAa,EAAd,EAAkBJ,GAAlB,CAAsB;IAAC;IAAsBK,GAAvB,KAA+BrB,gBAAgB,CAACqB,GAAD,CAArE,CAHF;IAILC,cAAc,EAAEC,MAAM,CAAClB,GAAG,CAACmB,cAAL,CAJjB;IAKLC,YAAY,EAAEF,MAAM,CAAClB,GAAG,CAACqB,YAAL,CALf;IAMLC,UAAU,EAAEJ,MAAM,CAAClB,GAAG,CAACuB,UAAL,CANb;IAOLC,QAAQ,EAAEN,MAAM,CAAClB,GAAG,CAACyB,QAAL,CAPX;IAQLC,eAAe,EAAER,MAAM,CAAClB,GAAG,CAAC2B,eAAL,CARlB;IASLC,eAAe,EAAEV,MAAM,CAAClB,GAAG,CAAC6B,eAAL;EATlB,CAAP;AAWD"},"metadata":{},"sourceType":"module"}